(function(v,d){typeof exports=="object"&&typeof module<"u"?d(exports,require("fabric")):typeof define=="function"&&define.amd?define(["exports","fabric"],d):(v=typeof globalThis<"u"?globalThis:v||self,d(v["fabric-guideline"]={},v.fabric))})(this,function(v,d){"use strict";function H(x){const t=Object.create(null,{[Symbol.toStringTag]:{value:"Module"}});if(x){for(const e in x)if(e!=="default"){const n=Object.getOwnPropertyDescriptor(x,e);Object.defineProperty(t,e,n.get?n:{enumerable:!0,get:()=>x[e]})}}return t.default=x,Object.freeze(t)}const l=H(d),u=x=>Object.keys(x);class W{aligningLineMargin=4;aligningLineWidth=.75;aligningLineColor="#F68066";verticalOffset=5;horizontalOffset=5;ignoreObjTypes=[];pickObjTypes=[];canvas;ctx;viewportTransform;verticalLines=[];horizontalLines=[];activeObj=new l.Object;constructor({canvas:t,aligningOptions:e,ignoreObjTypes:n,pickObjTypes:s}){this.canvas=t,this.ctx=t.getSelectionContext(),this.ignoreObjTypes=n||[],this.pickObjTypes=s||[],e&&(this.aligningLineMargin=e.lineMargin||this.aligningLineMargin,this.aligningLineWidth=e.lineWidth||this.aligningLineWidth,this.aligningLineColor=e.lineColor||this.aligningLineColor,this.verticalOffset=e.verticalOffset||this.verticalOffset,this.horizontalOffset=e.horizontalOffset||this.horizontalOffset)}drawSign(t,e){const n=this.ctx;n.lineWidth=.5,n.strokeStyle=this.aligningLineColor,n.beginPath();const s=2;n.moveTo(t-s,e-s),n.lineTo(t+s,e+s),n.moveTo(t+s,e-s),n.lineTo(t-s,e+s),n.stroke()}drawLine(t,e,n,s){const a=this.ctx,i=l.util.transformPoint(new l.Point(t,e),this.canvas.viewportTransform),r=l.util.transformPoint(new l.Point(n,s),this.canvas.viewportTransform);a.save(),a.lineWidth=this.aligningLineWidth,a.strokeStyle=this.aligningLineColor,a.beginPath(),a.moveTo(i.x,i.y),a.lineTo(r.x,r.y),a.stroke(),this.drawSign(i.x,i.y),this.drawSign(r.x,r.y),a.restore()}centerObjectInCanvas(){const t={x:this.canvas.getWidth()/2,y:this.canvas.getHeight()/2},e=this.activeObj,n=e.getScaledWidth(),s=e.getScaledHeight();e.set({left:t.x-n/2,top:t.y-s/2}),e.setCoords(),this.canvas.renderAll()}drawVerticalLine(t){const e=this.getObjDraggingObjCoords(this.activeObj);u(e).some(n=>Math.abs(e[n].x-t.x)<1e-4)&&this.drawLine(t.x,Math.min(t.y1,t.y2),t.x,Math.max(t.y1,t.y2))}drawHorizontalLine(t){const e=this.getObjDraggingObjCoords(this.activeObj);u(e).some(n=>Math.abs(e[n].y-t.y)<1e-4)&&this.drawLine(Math.min(t.x1,t.x2),t.y,Math.max(t.x1,t.x2),t.y)}isInRange(t,e){return Math.abs(Math.round(t)-Math.round(e))<=this.aligningLineMargin/this.canvas.getZoom()}watchMouseDown(){this.canvas.on("mouse:down",()=>{this.clearLinesMeta(),this.viewportTransform=this.canvas.viewportTransform})}watchMouseUp(){this.canvas.on("mouse:up",()=>{this.clearLinesMeta(),this.canvas.renderAll()})}watchMouseWheel(){this.canvas.on("mouse:wheel",()=>{this.clearLinesMeta()})}clearLinesMeta(){this.verticalLines.length=this.horizontalLines.length=0}watchObjectMoving(){this.canvas.on("object:moving",t=>{this.clearLinesMeta();const e=t.target;this.activeObj=e;const n=this.canvas.getObjects().filter(a=>this.ignoreObjTypes.length?!this.ignoreObjTypes.some(i=>a[i.key]===i.value):this.pickObjTypes.length?this.pickObjTypes.some(i=>a[i.key]===i.value):!0);this.canvas._currentTransform&&this.traversAllObjects(e,n)})}getObjDraggingObjCoords(t){const e=t.aCoords,n=new l.Point((e.tl.x+e.br.x)/2,(e.tl.y+e.br.y)/2),s=n.x-t.getCenterPoint().x,a=n.y-t.getCenterPoint().y;return u(e).reduce((i,r)=>({...i,[r]:{x:e[r].x-s,y:e[r].y-a}}),{c:t.getCenterPoint()})}omitCoords(t,e){let n;if(e==="vertical"){let s=["tl",t.tl],a=["tl",t.tl];u(t).forEach(i=>{t[i].x<s[1].x&&(s=[i,t[i]]),t[i].x>a[1].x&&(a=[i,t[i]])}),n={[s[0]]:s[1],[a[0]]:a[1],c:t.c}}else{let s=["tl",t.tl],a=["tl",t.tl];u(t).forEach(i=>{t[i].y<s[1].y&&(s=[i,t[i]]),t[i].y>a[1].y&&(a=[i,t[i]])}),n={[s[0]]:s[1],[a[0]]:a[1],c:t.c}}return n}getObjMaxWidthHeightByCoords(t){const e=Math.max(Math.abs(t.c.y-t.tl.y),Math.abs(t.c.y-t.tr.y))*2,n=Math.max(Math.abs(t.c.x-t.tl.x),Math.abs(t.c.x-t.tr.x))*2;return{objHeight:e,objWidth:n}}calcCenterPointByACoords(t){return new l.Point((t.tl.x+t.br.x)/2,(t.tl.y+t.br.y)/2)}traversAllObjects(t,e){const n=this.getObjDraggingObjCoords(t),s=[],a=[];for(let i=e.length;i--;){if(e[i]===t)continue;const r={...e[i].aCoords,c:e[i].getCenterPoint()},{objHeight:C,objWidth:m}=this.getObjMaxWidthHeightByCoords(r);u(n).forEach(c=>{const y=e[i].angle!==0?this.omitCoords(r,"horizontal"):r;function M(h,o){let f,g;return h==="c"?(f=Math.min(r.c.x-m/2,o[c].x),g=Math.max(r.c.x+m/2,o[c].x)):(f=Math.min(r[h].x,o[c].x),g=Math.max(r[h].x,o[c].x)),{x1:f,x2:g}}u(y).forEach(h=>{if(this.isInRange(n[c].y,r[h].y)){const o=r[h].y;let{x1:f,x2:g}=M(h,n);const p=n[c].y-o;if(a.push(n.c.y-p),t.aCoords){let{x1:w,x2:L}=M(h,{...t.aCoords,c:this.calcCenterPointByACoords(t.aCoords)});this.horizontalLines.push({y:o,x1:w,x2:L})}else this.horizontalLines.push({y:o,x1:f,x2:g})}})}),u(n).forEach(c=>{const y=e[i].angle!==0?this.omitCoords(r,"vertical"):r;function M(h,o){let f,g;return h==="c"?(f=Math.min(y.c.y-C/2,o[c].y),g=Math.max(y.c.y+C/2,o[c].y)):(f=Math.min(r[h].y,o[c].y),g=Math.max(r[h].y,o[c].y)),{y1:f,y2:g}}u(y).forEach(h=>{if(this.isInRange(n[c].x,r[h].x)){const o=r[h].x;let{y1:f,y2:g}=M(h,n);const p=n[c].x-o;if(s.push(n.c.x-p),t.aCoords){let{y1:w,y2:L}=M(h,{...t.aCoords,c:this.calcCenterPointByACoords(t.aCoords)});this.verticalLines.push({x:o,y1:w,y2:L})}else this.verticalLines.push({x:o,y1:f,y2:g})}})}),this.snap({activeObject:t,draggingObjCoords:n,snapXPoints:s,snapYPoints:a})}}snap({activeObject:t,snapXPoints:e,draggingObjCoords:n,snapYPoints:s}){const a=(i,r)=>i.length?i.map(C=>({abs:Math.abs(r-C),val:C})).sort((C,m)=>C.abs-m.abs)[0].val:r;t.setPositionByOrigin(new l.Point(a(e,n.c.x),a(s,n.c.y)),"center","center")}clearGuideline(){this.canvas.clearContext(this.ctx)}watchRender(){this.canvas.on("before:render",()=>{this.clearGuideline()}),this.canvas.on("after:render",()=>{for(let t=this.verticalLines.length;t--;)this.drawVerticalLine(this.verticalLines[t]);for(let t=this.horizontalLines.length;t--;)this.drawHorizontalLine(this.horizontalLines[t]);this.canvas.calcOffset()})}init(){this.watchObjectMoving(),this.watchRender(),this.watchMouseDown(),this.watchMouseUp(),this.watchMouseWheel(),this.centerObjectInCanvas()}}class T{canvas;horizontalOffset;verticalOffset;color;canvasWidthCenterMap={};canvasHeightCenterMap={};centerLineWidth=1;ctx;isInVerticalCenter=null;isInHorizontalCenter=null;constructor({canvas:t,horizontalOffset:e=4,verticalOffset:n=4,color:s="purple"}){this.canvas=t,this.ctx=t.getSelectionContext(),this.horizontalOffset=e,this.verticalOffset=n,this.color=s}get canvasWidth(){return this.canvas.getWidth()}get canvasHeight(){return this.canvas.getHeight()}get canvasWidthCenter(){return this.canvasWidth/2}get canvasHeightCenter(){return this.canvasHeight/2}get centerLineColor(){return this.color}showCenterLine(t,e,n,s){const a=this.canvas.viewportTransform,i=new l.Point(t,e).transform(a),r=new l.Point(n,s).transform(a);this.ctx.save(),this.ctx.strokeStyle=this.centerLineColor,this.ctx.lineWidth=this.centerLineWidth,this.ctx.beginPath(),this.ctx.moveTo(i.x,i.y),this.ctx.lineTo(r.x,r.y),this.ctx.stroke(),this.ctx.restore()}showHorizontalCenterLine(){this.showCenterLine(0,this.canvasHeightCenter,this.canvasWidth,this.canvasHeightCenter)}showVerticalCenterLine(){this.showCenterLine(this.canvasWidthCenter,0,this.canvasWidthCenter,this.canvasHeight)}onMouseDown(){this.isInVerticalCenter=null,this.isInHorizontalCenter=null}calculateCanvasCenter(){this.canvasWidthCenterMap={};for(let t=this.canvasWidthCenter-this.horizontalOffset,e=this.canvasWidthCenter+this.horizontalOffset;t<=e;t++)this.canvasWidthCenterMap[Math.round(t)]=!0;this.canvasHeightCenterMap={};for(let t=this.canvasHeightCenter-this.verticalOffset,e=this.canvasHeightCenter+this.verticalOffset;t<=e;t++)this.canvasHeightCenterMap[Math.round(t)]=!0}init(){this.calculateCanvasCenter(),this.canvas.on("mouse:down",this.onMouseDown.bind(this)),this.canvas.on("object:moving",t=>{const e=t.target,n=e.getCenterPoint();this.canvas._currentTransform&&(this.isInVerticalCenter=Math.round(n.x)in this.canvasWidthCenterMap,this.isInHorizontalCenter=Math.round(n.y)in this.canvasHeightCenterMap,(this.isInHorizontalCenter||this.isInVerticalCenter)&&e.setPositionByOrigin(new l.Point(this.isInVerticalCenter?this.canvasWidthCenter:n.x,this.isInHorizontalCenter?this.canvasHeightCenter:n.y),"center","center"))}),this.canvas.on("before:render",()=>{this.canvas.clearContext(this.canvas.contextTop)}),this.canvas.on("object:modified",()=>{this.isInVerticalCenter=null,this.isInHorizontalCenter=null,this.canvas.clearContext(this.canvas.contextTop),this.canvas.renderAll()}),this.canvas.on("after:render",()=>{this.isInVerticalCenter&&this.showVerticalCenterLine(),this.isInHorizontalCenter&&this.showHorizontalCenterLine()}),this.canvas.on("mouse:up",()=>{this.canvas.renderAll()})}}v.AlignGuidelines=W,v.CenteringGuidelines=T,Object.defineProperty(v,Symbol.toStringTag,{value:"Module"})});
