"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const A=require("fabric");function S(o){const t=Object.create(null,{[Symbol.toStringTag]:{value:"Module"}});if(o){for(const e in o)if(e!=="default"){const n=Object.getOwnPropertyDescriptor(o,e);Object.defineProperty(t,e,n.get?n:{enumerable:!0,get:()=>o[e]})}}return t.default=o,Object.freeze(t)}const u=S(A),C=o=>Object.keys(o),l=new u.Canvas("myCanvas",{backgroundColor:"#F5F5F5"}),w={};w.centerLine_horizontal="";w.centerLine_vertical="";w.alignmentLines_horizontal="";w.alignmentLines_vertical="";H();function _(){const o=Math.floor((1+Math.random())*256/2),t=Math.floor((1+Math.random())*256/2),e=Math.floor((1+Math.random())*256/2);return"rgb("+o+", "+t+", "+e+")"}function H(){w.outer=new u.Rect({width:l.getWidth(),height:l.getHeight(),top:20,left:20,stroke:"#ffffff",evented:!1,fill:"#ececec",selectable:!1}),l.add(w.outer),l.renderAll(),typeof w.outer.center=="function"?w.outer.center():console.error("Method center is not available on fabric.Rect");const o=({angle:i}={angle:0})=>new u.Rect({width:Math.floor(Math.random()*300),height:Math.floor(Math.random()*300),top:Math.floor(Math.random()*l.getHeight()),left:Math.floor(Math.random()*l.getWidth()),fill:_(),angle:i,myType:"box"}),t=5,e=1;for(let i=0;i<t;i++)i<e?l.add(o({angle:Math.floor(Math.random()*360)})):l.add(o());const n=l.getObjects().filter(i=>i.myType==="box");if(n.length>0){const i=R(n),s=l.getWidth(),r=l.getHeight(),a=(s-i.width)/2,x=(r-i.height)/2;n.forEach(h=>{h.set({left:h.left+a-i.left,top:h.top+x-i.top})}),l.renderAll()}}function R(o){if(o.length===0)return{left:0,top:0,width:0,height:0};const t=o.map(h=>h.left||0),e=o.map(h=>h.top||0),n=o.map(h=>(h.left||0)+(h.width||0)),i=o.map(h=>(h.top||0)+(h.height||0)),s=Math.min(...t),r=Math.min(...e),a=Math.max(...n),x=Math.max(...i);return{left:s,top:r,width:a-s,height:x-r}}let B=document.getElementById("reset");B.addEventListener("click",function(){D()},!1);function D(){l.remove(...l.getObjects()),H(),l.setViewportTransform([1,0,0,1,0,0])}l.on("mouse:wheel",o=>{let t=0,e=o.e.deltaY;e&&(t=e>0?1:-1);let n=l.getPointer(o.e),i=l.getZoom();i=i-t/10,i>4&&(i=4),i<.2&&(i=.2),l.zoomToPoint(new u.Point(n.x,n.y),i),o.e.preventDefault(),o.e.stopPropagation(),l.renderAll(),l.calcOffset()});function E({canvas:o,horizontalOffset:t=4,verticalOffset:e=4,color:n="purple"}){let i=o.getWidth(),s=o.getHeight(),r=i/2,a=s/2,x={},h={},d=n,v=1,y=o.getSelectionContext();for(let m=r-t,p=r+t;m<=p;m++)x[Math.round(m)]=!0;for(let m=a-e,p=a+e;m<=p;m++)h[Math.round(m)]=!0;function c(){M(r,0,r,s)}function f(){M(0,a,i,a)}function M(m,p,T,b){const W=o.viewportTransform,z=u.util.transformPoint(new u.Point(m,p),W),O=u.util.transformPoint(new u.Point(T,b),W);y.save(),y.strokeStyle=d,y.lineWidth=v,y.beginPath(),y.moveTo(z.x,z.y),y.lineTo(O.x,O.y),y.stroke(),y.restore()}let g=null,L=null;o.on("mouse:down",()=>{g=null,L=null,w.centerLine_horizontal="",w.centerLine_vertical="",o.viewportTransform}),o.on("object:moving",function(m){let p=m.target,T=p.getCenterPoint();o._currentTransform&&(g=Math.round(T.x)in x,L=Math.round(T.y)in h,(L||g)&&p.setPositionByOrigin(new u.Point(g?r:T.x,L?a:T.y),"center","center"))}),o.on("before:render",function(){o.clearContext(o.contextTop)}),o.on("object:modified",function(){g=null,L=null,o.clearContext(o.contextTop),o.renderAll()}),o.on("after:render",()=>{g&&(c(),w.centerLine_horizontal="",w.centerLine_vertical=r+.5+", 0, "+(r+.5)+", "+s),L&&f()}),o.on("mouse:up",function(){o.renderAll()})}const I=new P({canvas:l,pickObjTypes:[{key:"myType",value:"box"}],aligningOptions:{lineColor:"red",lineWidth:.5,horizontalOffset:40,verticalOffset:40}});I.init();class P{aligningLineMargin=4;aligningLineWidth=.75;aligningLineColor="#F68066";verticalOffset=5;horizontalOffset=5;ignoreObjTypes=[];pickObjTypes=[];canvas;ctx;viewportTransform;verticalLines=[];horizontalLines=[];activeObj=new u.Object;constructor({canvas:t,aligningOptions:e,ignoreObjTypes:n,pickObjTypes:i}){this.canvas=t,this.ctx=t.getSelectionContext(),this.ignoreObjTypes=n||[],this.pickObjTypes=i||[],e&&(this.aligningLineMargin=e.lineMargin||this.aligningLineMargin,this.aligningLineWidth=e.lineWidth||this.aligningLineWidth,this.aligningLineColor=e.lineColor||this.aligningLineColor,this.verticalOffset=e.verticalOffset||this.verticalOffset,this.horizontalOffset=e.horizontalOffset||this.horizontalOffset)}drawSign(t,e){const n=this.ctx;n.lineWidth=.5,n.strokeStyle=this.aligningLineColor,n.beginPath();const i=2;n.moveTo(t-i,e-i),n.lineTo(t+i,e+i),n.moveTo(t+i,e-i),n.lineTo(t-i,e+i),n.stroke()}drawLine(t,e,n,i){const s=this.ctx,r=u.util.transformPoint(new u.Point(t,e),this.canvas.viewportTransform),a=u.util.transformPoint(new u.Point(n,i),this.canvas.viewportTransform);s.save(),s.lineWidth=this.aligningLineWidth,s.strokeStyle=this.aligningLineColor,s.beginPath(),s.moveTo(r.x,r.y),s.lineTo(a.x,a.y),s.stroke(),this.drawSign(r.x,r.y),this.drawSign(a.x,a.y),s.restore()}centerObjectInCanvas(){const t={x:this.canvas.getWidth()/2,y:this.canvas.getHeight()/2},e=this.activeObj,n=e.getScaledWidth(),i=e.getScaledHeight();e.set({left:t.x-n/2,top:t.y-i/2}),e.setCoords(),this.canvas.renderAll()}drawVerticalLine(t){const e=this.getObjDraggingObjCoords(this.activeObj);C(e).some(n=>Math.abs(e[n].x-t.x)<1e-4)&&this.drawLine(t.x,Math.min(t.y1,t.y2),t.x,Math.max(t.y1,t.y2))}drawHorizontalLine(t){const e=this.getObjDraggingObjCoords(this.activeObj);C(e).some(n=>Math.abs(e[n].y-t.y)<1e-4)&&this.drawLine(Math.min(t.x1,t.x2),t.y,Math.max(t.x1,t.x2),t.y)}isInRange(t,e){return Math.abs(Math.round(t)-Math.round(e))<=this.aligningLineMargin/this.canvas.getZoom()}watchMouseDown(){this.canvas.on("mouse:down",()=>{this.clearLinesMeta(),this.viewportTransform=this.canvas.viewportTransform})}watchMouseUp(){this.canvas.on("mouse:up",()=>{this.clearLinesMeta(),this.canvas.renderAll()})}watchMouseWheel(){this.canvas.on("mouse:wheel",()=>{this.clearLinesMeta()})}clearLinesMeta(){this.verticalLines.length=this.horizontalLines.length=0}watchObjectMoving(){this.canvas.on("object:moving",t=>{this.clearLinesMeta();const e=t.target;this.activeObj=e;const n=this.canvas.getObjects().filter(s=>this.ignoreObjTypes.length?!this.ignoreObjTypes.some(r=>s[r.key]===r.value):this.pickObjTypes.length?this.pickObjTypes.some(r=>s[r.key]===r.value):!0);this.canvas._currentTransform&&this.traversAllObjects(e,n)})}getObjDraggingObjCoords(t){const e=t.aCoords,n=new u.Point((e.tl.x+e.br.x)/2,(e.tl.y+e.br.y)/2),i=n.x-t.getCenterPoint().x,s=n.y-t.getCenterPoint().y;return C(e).reduce((r,a)=>({...r,[a]:{x:e[a].x-i,y:e[a].y-s}}),{c:t.getCenterPoint()})}omitCoords(t,e){let n;if(e==="vertical"){let i=["tl",t.tl],s=["tl",t.tl];C(t).forEach(r=>{t[r].x<i[1].x&&(i=[r,t[r]]),t[r].x>s[1].x&&(s=[r,t[r]])}),n={[i[0]]:i[1],[s[0]]:s[1],c:t.c}}else{let i=["tl",t.tl],s=["tl",t.tl];C(t).forEach(r=>{t[r].y<i[1].y&&(i=[r,t[r]]),t[r].y>s[1].y&&(s=[r,t[r]])}),n={[i[0]]:i[1],[s[0]]:s[1],c:t.c}}return n}getObjMaxWidthHeightByCoords(t){const e=Math.max(Math.abs(t.c.y-t.tl.y),Math.abs(t.c.y-t.tr.y))*2,n=Math.max(Math.abs(t.c.x-t.tl.x),Math.abs(t.c.x-t.tr.x))*2;return{objHeight:e,objWidth:n}}calcCenterPointByACoords(t){return new u.Point((t.tl.x+t.br.x)/2,(t.tl.y+t.br.y)/2)}traversAllObjects(t,e){const n=this.getObjDraggingObjCoords(t),i=[],s=[];for(let r=e.length;r--;){if(e[r]===t)continue;const a={...e[r].aCoords,c:e[r].getCenterPoint()},{objHeight:x,objWidth:h}=this.getObjMaxWidthHeightByCoords(a);C(n).forEach(d=>{const v=e[r].angle!==0?this.omitCoords(a,"horizontal"):a;function y(c,f){let M,g;return c==="c"?(M=Math.min(a.c.x-h/2,f[d].x),g=Math.max(a.c.x+h/2,f[d].x)):(M=Math.min(a[c].x,f[d].x),g=Math.max(a[c].x,f[d].x)),{x1:M,x2:g}}C(v).forEach(c=>{if(this.isInRange(n[d].y,a[c].y)){const f=a[c].y;let{x1:M,x2:g}=y(c,n);const L=n[d].y-f;if(s.push(n.c.y-L),t.aCoords){let{x1:m,x2:p}=y(c,{...t.aCoords,c:this.calcCenterPointByACoords(t.aCoords)});this.horizontalLines.push({y:f,x1:m,x2:p})}else this.horizontalLines.push({y:f,x1:M,x2:g})}})}),C(n).forEach(d=>{const v=e[r].angle!==0?this.omitCoords(a,"vertical"):a;function y(c,f){let M,g;return c==="c"?(M=Math.min(v.c.y-x/2,f[d].y),g=Math.max(v.c.y+x/2,f[d].y)):(M=Math.min(a[c].y,f[d].y),g=Math.max(a[c].y,f[d].y)),{y1:M,y2:g}}C(v).forEach(c=>{if(this.isInRange(n[d].x,a[c].x)){const f=a[c].x;let{y1:M,y2:g}=y(c,n);const L=n[d].x-f;if(i.push(n.c.x-L),t.aCoords){let{y1:m,y2:p}=y(c,{...t.aCoords,c:this.calcCenterPointByACoords(t.aCoords)});this.verticalLines.push({x:f,y1:m,y2:p})}else this.verticalLines.push({x:f,y1:M,y2:g})}})}),this.snap({activeObject:t,draggingObjCoords:n,snapXPoints:i,snapYPoints:s})}}snap({activeObject:t,snapXPoints:e,draggingObjCoords:n,snapYPoints:i}){const s=(r,a)=>r.length?r.map(x=>({abs:Math.abs(a-x),val:x})).sort((x,h)=>x.abs-h.abs)[0].val:a;t.setPositionByOrigin(new u.Point(s(e,n.c.x),s(i,n.c.y)),"center","center")}clearGuideline(){this.canvas.clearContext(this.ctx)}watchRender(){this.canvas.on("before:render",()=>{this.clearGuideline()}),this.canvas.on("after:render",()=>{for(let t=this.verticalLines.length;t--;)this.drawVerticalLine(this.verticalLines[t]);for(let t=this.horizontalLines.length;t--;)this.drawHorizontalLine(this.horizontalLines[t]);this.canvas.calcOffset()})}init(){E({canvas:this.canvas,horizontalOffset:this.horizontalOffset,verticalOffset:this.verticalOffset,color:this.aligningLineColor}),this.watchObjectMoving(),this.watchRender(),this.watchMouseDown(),this.watchMouseUp(),this.watchMouseWheel(),this.centerObjectInCanvas()}}exports.AlignGuidelines=P;
